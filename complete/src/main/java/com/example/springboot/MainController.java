package com.example.springboot;
import com.example.springboot.Recipe;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@CrossOrigin(origins = "http://localhost:4200")
@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RecipeRepository recipeRepository;

    @GetMapping("/recipes")
    public List<Recipe> getRecipes() {
        System.out.println("komme da rein List");
        List<Recipe> recipe_list = (List<Recipe>) recipeRepository.findAll();
       if(recipe_list.isEmpty())
           System.out.println("Ist leer");

       return recipe_list;

    }

    @GetMapping("/recipes/edit/{id}")
    public Recipe getRecipe(@PathVariable int id) {
        System.out.println("komme da rein List huhu");
        return recipeRepository.findById(id).orElse(null);

    }

    @PutMapping("/recipes/edit/{id}")
    void updateRecipe(@PathVariable int id, @RequestBody Recipe recipe ) {
        System.out.println("komme da rein update");
        Recipe recipe_ = recipeRepository.findById(id).get();
        recipe_.setTitle(recipe.getTitle());
        recipe_.setDescription(recipe.getDescription());
        recipe_.setType(recipe.getType());
        recipe_.setPreparationtime(recipe.getPreparationtime());
        recipe_.setCookingtimeime(recipe.getCookingtime());
        recipe_.setContent(recipe.getContent());

        System.out.println("komme da rein update");
        System.out.println("komme da rein update " + recipe.getTitle());
        System.out.println("komme da rein update" + recipe.getType());
        System.out.println("komme da rein update" + recipe.getDescription());


        System.out.println("komme da rein Add");
        recipeRepository.save(recipe_);
    }

    @PostMapping("/recipes")
    void addUser(@RequestBody Recipe recipe) {
        System.out.println("komme da rein Add");
        recipeRepository.save(recipe);
    }

    @DeleteMapping("/recipes/delete/{id}")
    public void deleteRecipe(@PathVariable int id){
        recipeRepository.deleteById(id);
    }
}